# Generated by Django 2.2.6 on 2019-10-17 07:48

import django.utils.timezone
from django.db import migrations, models

# following are extracted from models to be preserved in history
TYP_AUTHOR = 1
TYP_KEYWORD = 2
TYP_LANG = 3
TYP_PUBLISHER = 4
TYP_CATEGORY = 100
TYP_GENERATED = 255


def extract_explicit_topics(apps, schema_editor):
    worktopic_model = apps.get_model('bookrank', 'WorkTopic')
    author_model = apps.get_model('bookrank', 'Author')
    authorwork_model = apps.get_model('bookrank', 'AuthorWork')
    publisher_model = apps.get_model('bookrank', 'Publisher')
    publisherwork_model = apps.get_model('bookrank', 'PublisherWork')
    topic_model = apps.get_model('bookrank', 'Topic')

    # publishers
    topic_id_to_exp_topic = {}
    publishers = []
    for topic in topic_model.objects.filter(typ=TYP_PUBLISHER):
        publisher = publisher_model(name=topic.name, work_set_id=topic.work_set_id)
        topic_id_to_exp_topic[topic.pk] = publisher
        publishers.append(publisher)
    publisher_model.objects.bulk_create(publishers)
    pws = []
    for i, wt in enumerate(worktopic_model.objects.filter(topic__typ=TYP_PUBLISHER)):
        publisher = topic_id_to_exp_topic[wt.topic_id]
        pws.append(publisherwork_model(work_id=wt.work_id, publisher_id=publisher.pk))
    publisherwork_model.objects.bulk_create(pws)

    # authors
    topic_id_to_exp_topic = {}
    authors = []
    for topic in topic_model.objects.filter(typ=TYP_AUTHOR):
        author = author_model(name=topic.name, work_set_id=topic.work_set_id)
        topic_id_to_exp_topic[topic.pk] = author
        authors.append(author)
    author_model.objects.bulk_create(authors)
    aws = []
    for i, wt in enumerate(worktopic_model.objects.filter(topic__typ=TYP_AUTHOR)):
        author = topic_id_to_exp_topic[wt.topic_id]
        aws.append(authorwork_model(work_id=wt.work_id, author_id=author.pk))
    authorwork_model.objects.bulk_create(aws)


def noop(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [('bookrank', '0011_work_catalog_date')]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('name', models.CharField(max_length=250)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                (
                    'work_set',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='bookrank.WorkSet'
                    ),
                ),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('name', models.CharField(max_length=250)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                (
                    'work_set',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='bookrank.WorkSet'
                    ),
                ),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='PublisherWork',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'publisher',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='bookrank.Publisher'
                    ),
                ),
                (
                    'work',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='bookrank.Work'
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='AuthorWork',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'author',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='bookrank.Author'
                    ),
                ),
                (
                    'work',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='bookrank.Work'
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name='work',
            name='authors',
            field=models.ManyToManyField(
                related_name='works', through='bookrank.AuthorWork', to='bookrank.Author'
            ),
        ),
        migrations.AddField(
            model_name='work',
            name='publishers',
            field=models.ManyToManyField(
                related_name='works', through='bookrank.PublisherWork', to='bookrank.Publisher'
            ),
        ),
        migrations.RunPython(extract_explicit_topics, noop),
    ]
